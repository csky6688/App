package com.junl.apps.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.junl.apps.common.ApiMessage;
import com.junl.apps.form.JiLiangForm;
import com.junl.apps.service.fzhl.IFzhl;
import com.junl.apps.service.jiaotong.IJiaoTong;
import com.junl.apps.service.jiliang.IJiLiang;
import com.junl.apps.service.liefeng.ILieFeng;
import com.junl.apps.service.lumian.ILuMian;
import com.junl.apps.service.yanghu.IYangHu;
import com.junl.apps.service.youwu.IYouWu;
import com.junl.frame.core.common.page.PageInfo;

@Controller
@RequestMapping("/jiliang")
public class JiLiangAction {
	
	@Autowired
	private IJiLiang jiliangServices;
	
	@Autowired
	private IFzhl fzhlServices;
	@Autowired
	private IJiaoTong jiaotongServices;
	@Autowired
	private ILieFeng liefengServices;
	@Autowired
	private ILuMian lumianServices;
	@Autowired
	private IYangHu yanghuServices;
	@Autowired
	private IYouWu youwuServices;
	
	
	
	
	
	
	/**默认分页列表
	 * 请求地址：http://127.0.0.1:8006/Apps/jiliang/queryJiLiangListPage.do
	 *		参数：
	 *			pageNo			当前页码				必填
	 *			limit			限制查询的记录数		必填
	 *			state			计量的状态
	 *			byNo			报验单号
	 *		返回：json
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="queryJiLiangListPage")
	public @ResponseBody Map<String, Object> queryJiLiangListPage(
			@RequestBody JiLiangForm form) throws Exception {
		
		try {
			PageInfo pageInfos = jiliangServices.queryJiLiangListPage(form);
			return ApiMessage.builder(true, pageInfos);
		} catch (Exception e) {
			e.printStackTrace();
			return ApiMessage.builder(false);
		}
	}
	
	
	/**根据报验的ids获取维修的数量（中间计量中的计量页面上的维修数量）
	 * 请求地址：http://127.0.0.1:8006/Apps/jiliang/queryWeiXiuNumByBaoYanIds.do
	 * 参数：
	 *			byIds			报验单编号				必填
	 *			
	 *		返回：json
	 * @param form
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="queryWeiXiuNumByBaoYanIds")
	public @ResponseBody Map<String, Object> queryWeiXiuNumByBaoYanIds(
			@RequestBody JiLiangForm form) throws Exception {
		
		try {
			List<Map<String, Object>> list = jiliangServices.queryWeiXiuNumByBaoYanIds(form);
			return ApiMessage.builder(true, list);
		} catch (Exception e) {
			e.printStackTrace();
			return ApiMessage.builder(false);
		}
	}
	
	
	/**循环查询各个维修记录表(计量操作页面中列表项)
	 * 首先根据报验的主键ids到报验外键表获取任务（任务表的外键表）的ids
	 * 根据获取到的任务（任务表的外键表）的ids获取维修表的记录数 
	 * 请求地址：http://127.0.0.1:8006/Apps/jiliang/queryForEach.do
	 *			
	 * 参数：
	 *			byIds			报验单编号				必填
	 *		返回：json
	 * @param form
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value="queryForEach")
	public @ResponseBody Map<String, Object> queryForEach(
			@RequestBody JiLiangForm form) throws Exception {
		
		try {
			Map<String, Object> params=new HashMap<String, Object>();
			params.put("byIds", form.getByIds());
			List<Map<String, Object>> list = fzhlServices.queryForEach(params);
			list.addAll(jiaotongServices.queryForEach(params));
			list.addAll(liefengServices.queryForEach(params));
			list.addAll(lumianServices.queryForEach(params));
			list.addAll(yanghuServices.queryForEach(params));
			list.addAll(youwuServices.queryForEach(params));
			return ApiMessage.builder(true, list);
		} catch (Exception e) {
			e.printStackTrace();
			return ApiMessage.builder(false);
		}
	}
	
}
